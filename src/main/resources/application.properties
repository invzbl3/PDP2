# 1. Simple In-Memory Database
# spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# 2. In-Memory Database with Custom Name
# spring.datasource.url=jdbc:h2:mem:mydbname

# 3. Persistent Database in File
# spring.datasource.url=jdbc:h2:file:./data/mydb

# spring.datasource.url=jdbc:h2:file:./data/mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

# spring.datasource.url=jdbc:h2:tcp:./data/mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.url=jdbc:h2:tcp://localhost/~/data/mydb
# spring.datasource.url=jdbc:h2:tcp://localhost:9092/~/data/mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.url=jdbc:h2:file:./data/mydb
# spring.datasource.url=jdbc:h2:tcp://localhost:9092/~/data/mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.url=jdbc:h2:tcp://localhost:9092/~/data/mydb
# spring.datasource.url=jdbc:h2:tcp://localhost:9092/E:/IdeaProject/PDP1/data/mydb.mv.db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.url=jdbc:h2:tcp://localhost:9092/E:/IdeaProject/PDP1/data/mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.url=jdbc:h2:file:./data/mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# spring.datasource.url=jdbc:h2:file:./data/mydb;AUTO_SERVER=TRUE
# spring.datasource.url=jdbc:h2:./data/testdb;AUTO_SERVER_PORT=10990
# spring.datasource.url=jdbc:h2:file:./data/testdb;AUTO_SERVER=TRUE
# spring.datasource.url=jdbc:h2:file:./data/testdb
# spring.datasource.url=jdbc:h2:file:./data/testdb;TRACE_LEVEL_FILE=4

spring.datasource.url=jdbc:h2:file:./data/testdb;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE

# spring.datasource.url=jdbc:h2:file:./data/mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# 4. In-Memory Database with Database Close Delay
# spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
# 5. Mixed Mode (In-Memory and File-Based)
# spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;FILE_LOCK=NO;MODE=PostgreSQL;DATABASE_TO_UPPER=false;AUTO_RECONNECT=TRUE;DB_CLOSE_ON_EXIT=FALSE
# 6. Network Mode
# spring.datasource.url=jdbc:h2:tcp://localhost/~/test
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
# spring.sql.init.data-locations=classpath:data.sql, classpath:import.sql
spring.sql.init.data-locations=classpath:import.sql
server.port=8081
# Enable SQL logging
# This property enables the logging of SQL statements generated by Hibernate
# (assuming you're using Hibernate as your JPA provider).
spring.jpa.show-sql=true
# Log SQL statements
# This line sets the logging level for Hibernate SQL statements to DEBUG,
# which means Hibernate will log the SQL statements it generates.
logging.level.org.hibernate.SQL=DEBUG
# Log SQL statement parameters
# This line sets the logging level for SQL parameters to TRACE,
# which means Hibernate will log the parameters passed in SQL statements.
logging.level.org.hibernate.type.descriptor.sql=TRACE
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.h2.console.path=/h2-console